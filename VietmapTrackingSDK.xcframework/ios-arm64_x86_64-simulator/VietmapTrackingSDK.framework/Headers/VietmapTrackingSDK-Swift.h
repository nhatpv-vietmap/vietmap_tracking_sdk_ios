#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
#ifndef VIETMAPTRACKINGSDK_SWIFT_H
#define VIETMAPTRACKINGSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFAudio;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import _LocationEssentials;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VietmapTrackingSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class CLLocation;
@class NSString;
SWIFT_CLASS("_TtC18VietmapTrackingSDK23EnhancedLocationManager")
@interface EnhancedLocationManager : NSObject
@property (nonatomic, copy) void (^ _Nullable onLocationUpdate)(CLLocation * _Nonnull, NSString * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onLocationError)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onAuthorizationChanged)(CLAuthorizationStatus);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)startTrackingWithHighAccuracyMode:(BOOL)highAccuracyMode SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)stopTracking;
- (void)requestLocationPermissions SWIFT_AVAILABILITY(ios,introduced=14.0);
- (BOOL)isTracking SWIFT_WARN_UNUSED_RESULT;
- (CLLocation * _Nullable)getLastKnownLocation SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLocationServicesStatus SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)requestFullAccuracy;
- (void)setCustomAccuracy:(CLLocationAccuracy)accuracy distanceFilter:(CLLocationDistance)distanceFilter;
- (void)enableBackgroundLocationUpdates:(BOOL)enable SWIFT_AVAILABILITY(ios,introduced=14.0);
@end

@class CLLocationManager;
@interface EnhancedLocationManager (SWIFT_EXTENSION(VietmapTrackingSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
@end

typedef SWIFT_ENUM(NSInteger, VMLocationMode, open) {
  VMLocationModeGpsCallback = 0,
  VMLocationModeExternalInput = 1,
};

typedef SWIFT_ENUM(NSInteger, VMVehicleType, open) {
  VMVehicleTypeCar = 1,
  VMVehicleTypeTaxi = 2,
  VMVehicleTypeBus = 3,
  VMVehicleTypeCoach = 4,
  VMVehicleTypeTruck = 5,
  VMVehicleTypeTrailer = 6,
  VMVehicleTypeCycle = 7,
  VMVehicleTypeBike = 8,
  VMVehicleTypePedestrian = 9,
  VMVehicleTypeSemiTrailer = 10,
};

@class NSDictionary;
SWIFT_CLASS("_TtC18VietmapTrackingSDK22VietmapTrackingManager")
@interface VietmapTrackingManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VietmapTrackingManager * _Nonnull shared;)
+ (VietmapTrackingManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) void (^ _Nullable onLocationUpdate)(NSDictionary * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onTrackingStatusChanged)(NSDictionary * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onError)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onPermissionChanged)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onRouteUpdate)(BOOL, NSDictionary * _Nullable);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithApiKey:(NSString * _Nullable)apiKey;
- (void)initializeWithApiKey:(NSString * _Nonnull)apiKey baseURL:(NSString * _Nonnull)baseURL;
- (void)configureWithApiKey:(NSString * _Nonnull)apiKey;
- (void)configureWithBaseURL:(NSString * _Nonnull)baseURL;
- (void)configureWithApiVersion:(NSString * _Nonnull)apiVersion;
- (void)setTrackingStatus:(NSString * _Nonnull)status;
- (void)configureWithApiKey:(NSString * _Nonnull)apiKey baseURL:(NSString * _Nonnull)baseURL autoUpload:(BOOL)autoUpload;
- (void)setAutoUploadWithEnabled:(BOOL)enabled;
- (void)setVehicleId:(NSString * _Nonnull)vehicleId;
- (void)setDriverId:(NSString * _Nullable)driverId;
- (NSString * _Nonnull)getVehicleId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDriverId SWIFT_WARN_UNUSED_RESULT;
- (void)onAppBackground;
- (void)onAppForeground;
- (NSDictionary * _Nullable)getCurrentLocation SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTrackingActive SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary * _Nonnull)getTrackingStatus SWIFT_WARN_UNUSED_RESULT;
- (void)requestLocationPermissionsWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
- (void)requestAlwaysLocationPermissionsWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
- (BOOL)hasLocationPermissions SWIFT_WARN_UNUSED_RESULT;
- (void)startTrackingWithEnhancedBackgroundMode:(BOOL)enhancedBackgroundMode intervalMs:(NSInteger)intervalMs distanceFilter:(double)distanceFilter completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
- (void)stopTrackingWithCompletion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
- (void)turnOnAlertWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)turnOffAlertWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)configureAlertAPIWithApiKey:(NSString * _Nonnull)apiKey apiID:(NSString * _Nonnull)apiID url:(NSString * _Nonnull)url;
/// Process location with custom vehicle parameters using enum for speed alerts
/// @param latitude Latitude coordinate
/// @param longitude Longitude coordinate<br/>
/// @param speed Current speed in m/s
/// @param heading Current heading in degrees
/// @param vehicleId Unique identifier for the vehicle (default: 1)
/// @param vehicleType Type of vehicle using VMVehicleType enum (default: .car)
/// @param seats Number of seats in the vehicle (default: 5)
/// @param weights Vehicle weight in kg (default: 1500.0)
- (void)processLocationWithVehicleTypeLatitude:(double)latitude longitude:(double)longitude speed:(double)speed heading:(double)heading vehicleId:(NSString * _Nonnull)vehicleId vehicleTypeEnum:(enum VMVehicleType)vehicleType seats:(NSInteger)seats weights:(double)weights;
/// Process location with custom vehicle parameters for speed alerts (backward compatibility)
/// @param latitude Latitude coordinate
/// @param longitude Longitude coordinate<br/>
/// @param speed Current speed in m/s
/// @param heading Current heading in degrees
/// @param vehicleId Unique identifier for the vehicle (default: 1)
/// @param vehicleType Type of vehicle - 1=Car, 2=Truck, etc. (default: 1)
/// @param seats Number of seats in the vehicle (default: 5)
/// @param weights Vehicle weight in kg (default: 1500.0)
- (void)processLocationWithVehicleParamsWithLatitude:(double)latitude longitude:(double)longitude speed:(double)speed heading:(double)heading vehicleId:(NSString * _Nonnull)vehicleId vehicleType:(NSInteger)vehicleType seats:(NSInteger)seats weights:(double)weights;
/// Configure vehicle information for speed alerts (using VMVehicleType enum)
/// @param vehicleId Unique identifier for the vehicle
/// @param vehicleType Type of vehicle using VMVehicleType enum
/// @param seats Number of seats in the vehicle
/// @param weight Vehicle weight in kg
/// @param maxProvision Maximum provision value
- (void)configureVehicleWithVehicleId:(NSString * _Nonnull)vehicleId vehicleTypeEnum:(enum VMVehicleType)vehicleType seats:(NSInteger)seats weight:(double)weight;
/// Configure vehicle information for speed alerts (backward compatibility)
/// @param vehicleId Unique identifier for the vehicle
/// @param vehicleType Type of vehicle (1 = Car, 2 = Truck, etc.)
/// @param seats Number of seats in the vehicle
/// @param weight Vehicle weight in kg
/// @param maxProvision Maximum provision value
- (void)configureVehicleWithVehicleId:(NSString * _Nonnull)vehicleId vehicleType:(NSInteger)vehicleType seats:(NSInteger)seats weight:(double)weight maxProvision:(NSInteger)maxProvision;
/// Get current vehicle configuration
- (NSDictionary * _Nonnull)getVehicleConfiguration SWIFT_WARN_UNUSED_RESULT;
/// Process external location input for speed alerts
/// This method allows feeding location data from external sources
/// Auto-switches from GPS to external input mode when called
- (void)processExternalLocationWithLatitude:(double)latitude longitude:(double)longitude speed:(double)speed heading:(double)heading;
/// Process external location input with CLLocation object
/// Convenience method for existing CLLocation objects
- (void)processExternalLocation:(CLLocation * _Nonnull)location;
/// Get current location mode
- (enum VMLocationMode)getCurrentLocationMode SWIFT_WARN_UNUSED_RESULT;
/// Check if speed alerts are currently active
- (BOOL)isSpeedAlertCurrentlyActive SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getCachedLocationsCount SWIFT_WARN_UNUSED_RESULT;
- (void)uploadCachedLocationsManuallyWithCompletion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
- (void)clearCachedLocations;
- (BOOL)isNetworkConnected SWIFT_WARN_UNUSED_RESULT;
/// Gets comprehensive tracking status for debugging
- (NSDictionary * _Nonnull)getTrackingHealthStatus SWIFT_WARN_UNUSED_RESULT;
@end

@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK))
- (void)startTrackingWithBackgroundMode:(BOOL)backgroundMode intervalMs:(NSInteger)intervalMs forceUpdateBackground:(BOOL)forceUpdateBackground distanceFilter:(double)distanceFilter completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
@end

@class AVSpeechSynthesizer;
@class AVSpeechUtterance;
@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK)) <AVSpeechSynthesizerDelegate>
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didStartSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didPauseSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didContinueSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didCancelSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
@end

SWIFT_AVAILABILITY(ios,introduced=14.0)
@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK))
- (void)startEnhancedTrackingWithHighAccuracyMode:(BOOL)highAccuracyMode completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion SWIFT_AVAILABILITY(ios,introduced=14.0);
- (NSDictionary * _Nonnull)getEnhancedLocationStatus SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)requestFullLocationAccuracy;
@end

@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
/// Process speed alert using C++ with custom vehicle parameters
/// @param location Current location data
/// @param vehicleId Unique identifier for the vehicle
/// @param vehicleType Type of vehicle (1 = Car, 2 = Truck, etc.)
/// @param seats Number of seats in the vehicle
/// @param weights Vehicle weight in kg
- (void)processSpeedAlertUsingCPPWithLocation:(CLLocation * _Nonnull)location vehicleId:(NSString * _Nonnull)vehicleId vehicleType:(NSInteger)vehicleType seats:(NSInteger)seats weights:(double)weights;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 6.2 effective-5.10 (swiftlang-6.2.0.19.9 clang-1700.3.19.1)
#ifndef VIETMAPTRACKINGSDK_SWIFT_H
#define VIETMAPTRACKINGSDK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wnon-modular-include-in-framework-module"
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#pragma clang diagnostic pop
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef unsigned char char8_t;
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import AVFAudio;
@import CoreLocation;
@import Foundation;
@import ObjectiveC;
@import _LocationEssentials;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"
#pragma clang diagnostic ignored "-Wunsafe-buffer-usage"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="VietmapTrackingSDK",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)

@class CLLocation;
@class NSString;
SWIFT_CLASS("_TtC18VietmapTrackingSDK23EnhancedLocationManager")
@interface EnhancedLocationManager : NSObject
@property (nonatomic, copy) void (^ _Nullable onLocationUpdate)(CLLocation * _Nonnull, NSString * _Nonnull, NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onLocationError)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onAuthorizationChanged)(CLAuthorizationStatus);
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
- (void)startTrackingWithHighAccuracyMode:(BOOL)highAccuracyMode SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)stopTracking;
- (void)requestLocationPermissions SWIFT_AVAILABILITY(ios,introduced=14.0);
- (BOOL)isTracking SWIFT_WARN_UNUSED_RESULT;
- (CLLocation * _Nullable)getLastKnownLocation SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nonnull)getLocationServicesStatus SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)requestFullAccuracy;
- (void)setCustomAccuracy:(CLLocationAccuracy)accuracy distanceFilter:(CLLocationDistance)distanceFilter;
- (void)enableBackgroundLocationUpdates:(BOOL)enable SWIFT_AVAILABILITY(ios,introduced=14.0);
@end

@class CLLocationManager;
@interface EnhancedLocationManager (SWIFT_EXTENSION(VietmapTrackingSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
- (void)locationManagerDidChangeAuthorization:(CLLocationManager * _Nonnull)manager SWIFT_AVAILABILITY(ios,introduced=14.0);
@end

typedef SWIFT_ENUM(NSInteger, VMLocationMode, open) {
  VMLocationModeGpsCallback = 0,
  VMLocationModeExternalInput = 1,
};

typedef SWIFT_ENUM(NSInteger, VMVehicleType, open) {
  VMVehicleTypeCar = 1,
  VMVehicleTypeTaxi = 2,
  VMVehicleTypeBus = 3,
  VMVehicleTypeCoach = 4,
  VMVehicleTypeTruck = 5,
  VMVehicleTypeTrailer = 6,
  VMVehicleTypeCycle = 7,
  VMVehicleTypeBike = 8,
  VMVehicleTypePedestrian = 9,
  VMVehicleTypeSemiTrailer = 10,
};

@class NSDictionary;
SWIFT_CLASS("_TtC18VietmapTrackingSDK22VietmapTrackingManager")
@interface VietmapTrackingManager : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) VietmapTrackingManager * _Nonnull shared;)
+ (VietmapTrackingManager * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, copy) void (^ _Nullable onLocationUpdate)(NSDictionary * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onTrackingStatusChanged)(NSDictionary * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onError)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onPermissionChanged)(NSString * _Nonnull);
@property (nonatomic, copy) void (^ _Nullable onRouteUpdate)(BOOL, NSDictionary * _Nullable);
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (nonnull instancetype)initWithApiKey:(NSString * _Nullable)apiKey;
- (void)initializeWithApiKey:(NSString * _Nonnull)apiKey baseURL:(NSString * _Nonnull)baseURL;
- (void)configureWithApiKey:(NSString * _Nonnull)apiKey;
- (void)configureWithBaseURL:(NSString * _Nonnull)baseURL;
- (void)configureWithApiVersion:(NSString * _Nonnull)apiVersion;
- (void)setTrackingStatus:(NSString * _Nonnull)status;
- (void)configureWithApiKey:(NSString * _Nonnull)apiKey baseURL:(NSString * _Nonnull)baseURL autoUpload:(BOOL)autoUpload;
- (void)setAutoUploadWithEnabled:(BOOL)enabled;
- (void)setVehicleId:(NSString * _Nonnull)vehicleId;
- (void)setDriverId:(NSString * _Nullable)driverId;
- (NSString * _Nonnull)getVehicleId SWIFT_WARN_UNUSED_RESULT;
- (NSString * _Nullable)getDriverId SWIFT_WARN_UNUSED_RESULT;
- (void)onAppBackground;
- (void)onAppForeground;
- (NSDictionary * _Nullable)getCurrentLocation SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isTrackingActive SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary * _Nonnull)getTrackingStatus SWIFT_WARN_UNUSED_RESULT;
- (void)requestLocationPermissionsWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
- (void)requestAlwaysLocationPermissionsWithCompletion:(void (^ _Nonnull)(NSString * _Nonnull))completion;
- (BOOL)hasLocationPermissions SWIFT_WARN_UNUSED_RESULT;
- (void)startTrackingWithEnhancedBackgroundMode:(BOOL)enhancedBackgroundMode intervalMs:(NSInteger)intervalMs distanceFilter:(double)distanceFilter completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
- (void)stopTrackingWithCompletion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
- (void)turnOnAlertWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)turnOffAlertWithCompletion:(void (^ _Nonnull)(BOOL))completion;
- (void)configureAlertAPIWithApiKey:(NSString * _Nonnull)apiKey apiID:(NSString * _Nonnull)apiID url:(NSString * _Nonnull)url;
/// Process location with custom vehicle parameters using enum for speed alerts
/// @param latitude Latitude coordinate
/// @param longitude Longitude coordinate<br/>
/// @param speed Current speed in m/s
/// @param heading Current heading in degrees
/// @param vehicleId Unique identifier for the vehicle (default: 1)
/// @param vehicleType Type of vehicle using VMVehicleType enum (default: .car)
/// @param seats Number of seats in the vehicle (default: 5)
/// @param weights Vehicle weight in kg (default: 1500.0)
- (void)processLocationWithVehicleTypeLatitude:(double)latitude longitude:(double)longitude speed:(double)speed heading:(double)heading vehicleId:(NSString * _Nonnull)vehicleId vehicleTypeEnum:(enum VMVehicleType)vehicleType seats:(NSInteger)seats weights:(double)weights;
/// Process location with custom vehicle parameters for speed alerts (backward compatibility)
/// @param latitude Latitude coordinate
/// @param longitude Longitude coordinate<br/>
/// @param speed Current speed in m/s
/// @param heading Current heading in degrees
/// @param vehicleId Unique identifier for the vehicle (default: 1)
/// @param vehicleType Type of vehicle - 1=Car, 2=Truck, etc. (default: 1)
/// @param seats Number of seats in the vehicle (default: 5)
/// @param weights Vehicle weight in kg (default: 1500.0)
- (void)processLocationWithVehicleParamsWithLatitude:(double)latitude longitude:(double)longitude speed:(double)speed heading:(double)heading vehicleId:(NSString * _Nonnull)vehicleId vehicleType:(NSInteger)vehicleType seats:(NSInteger)seats weights:(double)weights;
/// Configure vehicle information for speed alerts (using VMVehicleType enum)
/// @param vehicleId Unique identifier for the vehicle
/// @param vehicleType Type of vehicle using VMVehicleType enum
/// @param seats Number of seats in the vehicle
/// @param weight Vehicle weight in kg
/// @param maxProvision Maximum provision value
- (void)configureVehicleWithVehicleId:(NSString * _Nonnull)vehicleId vehicleTypeEnum:(enum VMVehicleType)vehicleType seats:(NSInteger)seats weight:(double)weight;
/// Configure vehicle information for speed alerts (backward compatibility)
/// @param vehicleId Unique identifier for the vehicle
/// @param vehicleType Type of vehicle (1 = Car, 2 = Truck, etc.)
/// @param seats Number of seats in the vehicle
/// @param weight Vehicle weight in kg
/// @param maxProvision Maximum provision value
- (void)configureVehicleWithVehicleId:(NSString * _Nonnull)vehicleId vehicleType:(NSInteger)vehicleType seats:(NSInteger)seats weight:(double)weight maxProvision:(NSInteger)maxProvision;
/// Get current vehicle configuration
- (NSDictionary * _Nonnull)getVehicleConfiguration SWIFT_WARN_UNUSED_RESULT;
/// Process external location input for speed alerts
/// This method allows feeding location data from external sources
/// Auto-switches from GPS to external input mode when called
- (void)processExternalLocationWithLatitude:(double)latitude longitude:(double)longitude speed:(double)speed heading:(double)heading;
/// Process external location input with CLLocation object
/// Convenience method for existing CLLocation objects
- (void)processExternalLocation:(CLLocation * _Nonnull)location;
/// Get current location mode
- (enum VMLocationMode)getCurrentLocationMode SWIFT_WARN_UNUSED_RESULT;
/// Check if speed alerts are currently active
- (BOOL)isSpeedAlertCurrentlyActive SWIFT_WARN_UNUSED_RESULT;
- (NSInteger)getCachedLocationsCount SWIFT_WARN_UNUSED_RESULT;
- (void)uploadCachedLocationsManuallyWithCompletion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
- (void)clearCachedLocations;
- (BOOL)isNetworkConnected SWIFT_WARN_UNUSED_RESULT;
/// Gets comprehensive tracking status for debugging
- (NSDictionary * _Nonnull)getTrackingHealthStatus SWIFT_WARN_UNUSED_RESULT;
@end

@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK))
- (void)startTrackingWithBackgroundMode:(BOOL)backgroundMode intervalMs:(NSInteger)intervalMs forceUpdateBackground:(BOOL)forceUpdateBackground distanceFilter:(double)distanceFilter completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion;
@end

@class AVSpeechSynthesizer;
@class AVSpeechUtterance;
@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK)) <AVSpeechSynthesizerDelegate>
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didStartSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didFinishSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didPauseSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didContinueSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
- (void)speechSynthesizer:(AVSpeechSynthesizer * _Nonnull)synthesizer didCancelSpeechUtterance:(AVSpeechUtterance * _Nonnull)utterance;
@end

SWIFT_AVAILABILITY(ios,introduced=14.0)
@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK))
- (void)startEnhancedTrackingWithHighAccuracyMode:(BOOL)highAccuracyMode completion:(void (^ _Nonnull)(BOOL, NSString * _Nullable))completion SWIFT_AVAILABILITY(ios,introduced=14.0);
- (NSDictionary * _Nonnull)getEnhancedLocationStatus SWIFT_WARN_UNUSED_RESULT SWIFT_AVAILABILITY(ios,introduced=14.0);
- (void)requestFullLocationAccuracy;
@end

@interface VietmapTrackingManager (SWIFT_EXTENSION(VietmapTrackingSDK)) <CLLocationManagerDelegate>
- (void)locationManager:(CLLocationManager * _Nonnull)manager didUpdateLocations:(NSArray<CLLocation *> * _Nonnull)locations;
/// Process speed alert using C++ with custom vehicle parameters
/// @param location Current location data
/// @param vehicleId Unique identifier for the vehicle
/// @param vehicleType Type of vehicle (1 = Car, 2 = Truck, etc.)
/// @param seats Number of seats in the vehicle
/// @param weights Vehicle weight in kg
- (void)processSpeedAlertUsingCPPWithLocation:(CLLocation * _Nonnull)location vehicleId:(NSString * _Nonnull)vehicleId vehicleType:(NSInteger)vehicleType seats:(NSInteger)seats weights:(double)weights;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didFailWithError:(NSError * _Nonnull)error;
- (void)locationManager:(CLLocationManager * _Nonnull)manager didChangeAuthorizationStatus:(CLAuthorizationStatus)status;
@end

#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
